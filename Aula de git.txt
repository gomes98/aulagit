aula 6 Configuração inicial:

para adicionar um username no git em um usuário do SO é:
git config --global user.name "TEUNOME"

para adicionar um email no git em um usuário do SO é:
git config --global user.email "TEUEMAIL"

para configurar um editor no git em um usuário do SO é:
git config --global core.editor comando do editor

aula 7 inicializando um repositorio:

para inicializar um repositorio entre na pasta e digite:
git init


Aula 9 O ciclo de vida dos status de seus arquivos:

para mostrar os status dos aquivos use o comando:
git status

para adicionar um arquivo no git:
git add "NOMEDOARQUIVO"
cada vez que o arquivo for modificado deve-se excutar este comando

para fazer um comit deve:
git commit -m "COMENTARIO"

é importante que o COMENTARIO seja relevante ou ainda informe o que foi modificado

Aula 10 Visualizando logs:

para ver os logs devemos digitar:
git log 

para ver os logs com mais informações digitamos:
git log --decorate

para ver os logs com os autores:
git log --author="NOMEDOAUTOR"

para ver as contribuições:
git shortlog

para ver somente a quantidade de commits por usuário:
git shortlog -sn

mostra em forma grafica os commits:
git log --graph

para ver as modificações de um commit:
git show HASHDOCOMMIT

Aula 11 Visualizando o diff:

para visualizar as modificações antes de enviar:
git diff

para sair do git diff 
digite q na janela do terminal

para visualizar o nome do arquivo modificado:
git diff --name-only

para comitar um arquivo que ja foi commitado:
git commit -am "COMENTARIO"

Aula 12 Desfazendo coisas:

para desfazer a ultima alteração que não foi comitada:
git checkout "NOMEDOARQUIVO"

para voltar a ultima alteração que ja foi add:
git reset HEAD
depois:
git checkout "NOMEDOARQUIVO"

variações do git reset:
  git reset --soft "HASH"
  volta e remove a comit com os arquivos prontos para serem comitados novamente STAGED
  
  git reset --mixed "HASH"
  volta e  remove a comit com os arquivos prontos para serem comitados novamente MODIFIED

  git reset --hard "HASH"
  volta e remove a comit com os arquivos prontos para serem comitados novamente MODIFIED


Aula 15 Ligando repositório local a um remoto:

git remote add origin https://github.com/USUARIO/RESPOSITORIO.git
git branch -M main
git push -u origin main


Aula 16 Enviando mudanças para um repositório remoto:

git push origin main 

Aula 20 Criando um branch:

para ver os branchs:
git branch

para criar um novo branch:
git checkout -b NOMEDOBRANCH

Aula 21 Movendo e deletando branches:

para trocar de branch:
git checkout NOMEDOBRANCH

para deletar de branch:
git branch -D NOMEDOBRANCH


Aula 26 Git stash é lindo:

git stash 
este comando salva as alterações em outro lugar, não faz o commit

depois quando quiser pegar novamente as alterações
git stash apply
ele devolve as alterações como estavam antes do git stash

para ver o que tem pindurado no git stash
git stash list

para limpar o que tem pindurado no git stash
git stash clear


Aula 27 Alias para que te quero:
para adicionar atalhos no comando git use
git config --global alias.OATALHOQUEQUERUSAR COMANDOQUEQUERATALHAR


Aula 28 Versionando com Tags:
git tag -a 1.0.0 -m "AULA 28"
este comando gera uma tag com uma versão com opção de baixar codigo fonte completo desta versão
para enviar para o github
git push origin master --tags